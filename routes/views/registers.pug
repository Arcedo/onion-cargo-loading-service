extends layout

block content
  header
    h1(data-test='service-heading') Cargo Loading Service
    ul
      li 
        a(href='/ui/v1/containers') Containers
      li 
        a(href='/ui/v1/clients') Clients
      li 
        p Registers
  if (result && result.message)
    if (result.level === 'ERROR')
      div(data-test='message-error').alert.error
        strong Error!&nbsp;
        | #{result.message}
    else
      div(data-test='message-info').alert.info
        strong Success!&nbsp;
        | #{result.message}
  article#article
    h2(data-test='client-heading') Registers
    p Registers data
    a.firstButton
      button#buttonHelp(data-test='usage-info', type="button",onclick="showUsage()") Help
    div#usage
      h2 Usage
      p Here we explain how to use this page:
      ul 
      li a
      li a
      li b 
      li b 
    section#register
      form(data-test='pagination-form', action='/ui/v1/registers', method='post')
        p 
          label(for='skip') From 
          input#skip(data-test='pagination-form-skip', type='text', name='skip', value=`${skip}`) 
        p
         label(for='limit') to 
          input#limit(data-test='pagination-form-limit', type='text', name='limit', value=`${parseInt(skip)+parseInt(limit)}`)
        button(data-test='pagination-form-submit', onclick='submit') Search
      .ag-theme-alpine-dark#myGrid(style='height: 500px;width: 90%;')
  footer
    span
    a(href='https://github.com/CodeBiting', target='_blank') CodeBiting&copy
  - var gridCols= gridColumns
  - var gridData= rowData
  script(type='text/javascript').
    //Usage
    function showUsage() {
      if(document.getElementById('usage').style.display === "block"){
        document.getElementById('buttonHelp').innerHTML = "Help";
        document.getElementById('usage').style.display = "none";
        document.getElementById('article').style.height = "82.9vh";
      }else{
        document.getElementById('usage').style.display = "block";
        document.getElementById('article').style.height = "100vh";
        document.getElementById('buttonHelp').innerHTML = "Close";
      }
    }
    function deselect(){
      gridOptions.api.deselectAll()
    }
    // get div to host the grid
    const eGridDiv = document.getElementById("myGrid");
    // Grid Options are properties passed to the grid
    const gridOptions = {
      // each entry here represents one column
      columnDefs: JSON.parse(JSON.stringify(!{gridCols})),
      // all the data that will be displayed
      rowData: JSON.parse(JSON.stringify(!{gridData})),
      // default col def properties get applied to all columns
      defaultColDef: {sortable: true, filter: true},
      // have rows animate to new positions when sorted
      animateRows: true, 
      //pagination: true,
      // example event handler
      onCellClicked: params => {
        console.log('cell was clicked', params)
      }
    };
    // new grid instance, passing in the hosting DIV and Grid Options
    new agGrid.Grid(eGridDiv, gridOptions);