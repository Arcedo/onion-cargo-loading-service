extends layout

block content
  header
   h1 Cargo Loading Service
   ul
    li 
     p Containers
    li 
     a(href='/ui/v1/clients') Clients
    li 
     a(href='/ui/v1/registers') Registers
  article
   h2 Containers
   p Containers data
   section
    form(action='/ui/v1/containers', method='post')
     p 
      label(for='skip') From 
      input#skip(type='text', name='skip', value=`${skip}`) 
     p
      label(for='limit') to 
      input#limit(type='text', name='limit', value=`${parseInt(skip)+parseInt(limit)}`)
     button(onclick='submit') Search
    .ag-theme-alpine-dark#myGrid(style='height: 500px;width: 90%;')
    a.firstButton
     button.add Add
    a
     button.mod Modify
    a
     button.del Delete
  footer
     span
      a(href='https://github.com/CodeBiting', target='_blank') CodeBiting&copy
  div.popup.add
   a.close_btn &times;
   h2 Add
   form(action='/ui/v1/containers', method='post')
    div.form_elemen
     label(for='clientId') Client Id: 
     input(type="number", name='clientId', required)
    div.form_elemen
     label(for='code') Code: 
     input(type="text", name='code', required)
    div.form_elemen
     label(for='dateStart') Description: 
     input(type="text", name='description')
    div.form_elemen
     label(for='width') Width: 
     input(type="number", name='width', required)
    div.form_elemen
     label(for='length') Length: 
     input(type="number", name='length', required)
    div.form_elemen
     label(for='height') Height: 
     input(type="number", name='height', required)
    div.form_elemen
     label(for='maxWeight') Max. Weight: 
     input(type="number", name='maxWeight')
    input(type="hidden" name='method' value=1)
    button() Submit
  div.popup.mod
   a.close_btn &times;
   h2 Modify
   form(action='/ui/v1/containers', method='post', onSubmit="return confirm('Are you sure?\nThe actions can't be undone.')")
    div.form_elemen
     label(for='id') ID: 
     input(type="number", name='id', required)
    div.form_elemen
     label(for='clientId') Client Id: 
     input(type="number", name='clientId', required)
    div.form_elemen
     label(for='code') Code: 
     input(type="text", name='code', required)
    div.form_elemen
     label(for='description') Description: 
     input(type="text", name='description')
    div.form_elemen
     label(for='width') Width: 
     input(type="number", name='width', required)
    div.form_elemen
     label(for='length') Length: 
     input(type="number", name='length', required)
    div.form_elemen
     label(for='height') Height: 
     input(type="number", name='height', required)
    div.form_elemen
     label(for='maxWeight') Max. Weight: 
     input(type="number", name='maxWeight')
    input(type="hidden" name='method' value=2)
    button() Submit
  div.popup.del
   a.close_btn &times;
   h2 Delete
   form(action='/ui/v1/containers', method='post', onSubmit="return confirm('Are you sure?\nThe actions can't be undone.')")
    div.form_elemen
     label(for='id') ID of the Container to delete: 
     input(type="number", name='id', required)
    input(type="hidden" name='method' value=3)
    button() Submit

  //Grid script
  - var gridCols= gridColumns
  - var gridData= rowData
  script(type='text/javascript').
     document.querySelector(".add").addEventListener("click", function(){
         document.querySelector(".popup.add").classList.add("active");
      });
      document.querySelector(".del").addEventListener("click", function(){
         document.querySelector(".popup.del").classList.add("active");
      });
      document.querySelector(".mod").addEventListener("click", function(){
         document.querySelector(".popup.mod").classList.add("active");
      });
     document.querySelector(".popup.add .close_btn").addEventListener("click", function(){
      document.querySelector(".popup.add").classList.remove("active");
     });
     document.querySelector(".popup.mod .close_btn").addEventListener("click", function(){
      document.querySelector(".popup.mod").classList.remove("active");
     });
     document.querySelector(".popup.del .close_btn").addEventListener("click", function(){
      document.querySelector(".popup.del").classList.remove("active");
     });
     function deselect(){
         gridOptions.api.deselectAll()
     }
     // get div to host the grid
     const eGridDiv = document.getElementById("myGrid");
     // Grid Options are properties passed to the grid
     const gridOptions = {
          // each entry here represents one column
          columnDefs: JSON.parse(JSON.stringify(!{gridCols})),
          rowData: JSON.parse(JSON.stringify(!{gridData})),
          // default col def properties get applied to all columns
          defaultColDef: {sortable: true, filter: true},

          //rowSelection: 'multiple', // allow rows to be selected
          animateRows: true, // have rows animate to new positions when sorted
          //pagination: true,
          // example event handler
          onCellClicked: params => {
               console.log('cell was clicked', params)
          }
     };
     // new grid instance, passing in the hosting DIV and Grid Options
     new agGrid.Grid(eGridDiv, gridOptions);